#!/usr/bin/python -tt

# mypaystub.info scraper v1.1.2
# Copyright (c) 2008-9, John Morrissey <jwm@horde.net>
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of Version 2 of the GNU General Public License as
# published by the Free Software Foundation
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

# Change history:
# v1.1.2 (30 Oct 2011):
# - Update for mypaystub.info form name changes.
#
# v1.1.1 (14 Jan 2009):
# - Quote the document ID properly when retrieving the PDF.
# - Better error handling.
#
# v1.1 (28 Nov 2008):
# - Add -l/--list option to list all available pay stubs.
#
# v1.0 (21 Nov 2008):
# - Initial release.

USERNAME = ''
PASSWORD = ''
COMPANY = ''

import cgi
from getopt import gnu_getopt, GetoptError
from os.path import basename
import re
import sys
from urllib import urlencode, quote_plus
from urllib2 import Request

from BeautifulSoup import BeautifulSoup
import mechanize

def usage():
	print 'mypaystub.info scraper v1.1.2'
	print 'Usage: ' + basename(sys.argv[0]) + ' [-h|--help] DATE'
	print ''
	print '    -h, --help   display this help and exit'
	print '    -l, --list   list available pay stub dates'

try:
	options, when = gnu_getopt(sys.argv[1:], 'hl', ['help', 'list'])
except GetoptError, e:
	print basename(sys.argv[0]) + ': ' + str(e)
	usage()
	sys.exit(1)

LIST_ALL = False
for option in options:
	if option[0] == '-h' or option[0] == '--help':
		usage()
		sys.exit(1)
	if option[0] == '-l' or option[0] == '--list':
		LIST_ALL = True

if not USERNAME or not PASSWORD or not COMPANY:
	usage()
	sys.exit(1)

if len(when) > 1:
	usage()
	sys.exit(1)

try:
	auth = Request('https://%s.mypaystub.info/ddiarchive/Default.aspx' % COMPANY,
		urlencode((
			('__EVENTTARGET', ''),
			('__EVENTARGUMENT', ''),
			('__EVENTVALIDATION', '/wEWBQL/3fXjBgLT8dy8BQK1qbSRCwKC3IeGDALWxaLXDBtR9wjvMd+nFEAjQyTzCoNLo7ZP'),
			('__VIEWSTATE', '/wEPDwULLTE1MjQ5MjU3NjkPZBYCZg9kFggCAQ9kFgQCAQ9kFgJmDw8WBB4MQmFja0ltYWdlVXJsBQ8uLi9Mb2dvL2RkaS5naWYeBF8hU0ICgIAEZBYCAgEPDxYCHgdWaXNpYmxlaGRkAgUPZBYKZg8PFgQeBFRleHQFBEhlbHAeC05hdmlnYXRlVXJsBRQvZGRpYXJjaGl2ZS8uLlxoZWxwXGRkAgEPDxYCHwJoZGQCAg8PFgIfAmhkZAIDDxQrAANkPCsAFAMAFhQeCkpTRmlsZU5hbWVlHgxXZWJNZW51U3R5bGULKagBSW5mcmFnaXN0aWNzLldlYlVJLlVsdHJhV2ViTmF2aWdhdG9yLldlYk1lbnVTdHlsZSwgSW5mcmFnaXN0aWNzMzUuV2ViVUkuVWx0cmFXZWJOYXZpZ2F0b3IudjguMiwgVmVyc2lvbj04LjIuMjAwODIuMTAwMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03ZGQ1YzMxNjNmMmNkMGNiAB4IRW5oYW5jZWRnHhZUb3BMZXZlbEhvdmVySXRlbUNsYXNzBTlpZ184N2ZmZWIzOF9yMTAgVG9wTGV2ZWxIb3Zlckl0ZW1TdHlsZSBNZW51SG92ZXJJdGVtU3R5bGUeD1BhcmVudEl0ZW1DbGFzc2UeF1RvcExldmVsUGFyZW50SXRlbUNsYXNzBRdUb3BMZXZlbFBhcmVudEl0ZW1TdHlsZR4OQm9yZGVyQ29sbGFwc2VnHhVUb3BMZXZlbExlYWZJdGVtQ2xhc3NlHg9Db21wb25lbnRUYXJnZXQLKasBSW5mcmFnaXN0aWNzLldlYlVJLlVsdHJhV2ViTmF2aWdhdG9yLkNvbXBvbmVudFRhcmdldCwgSW5mcmFnaXN0aWNzMzUuV2ViVUkuVWx0cmFXZWJOYXZpZ2F0b3IudjguMiwgVmVyc2lvbj04LjIuMjAwODIuMTAwMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03ZGQ1YzMxNjNmMmNkMGNiAh4NTGVhZkl0ZW1DbGFzc2UGFgALFggeCENzc0NsYXNzBQ5TZXBhcmF0b3JDbGFzcx4BQQUOaWdfbWVudVNlcC5naWYeAUIFHGJhY2tncm91bmQtcmVwZWF0OnJlcGVhdC14OyAfAQICZGQCBA8PFgIfAmhkZAIDD2QWAgILDxAPFgIfAmhkZBYAZAIFD2QWAgIHDw8WAh8DZWRkAgcPFgIfAwWaCjxGT05UIGZhY2U9QXJpYWwgc2l6ZT0yPldlbGNvbWUgdG8geW91ciBQYXlyb2xsIFJlY29yZHMgUmVwb3NpdG9yeSBhdCA8Yj5NWVBBWVNUVUIuaW5mbzwvYj4uPGJyPjxicj5Zb3VyIGxvZ2luIHVzZXIgSUQgY29uc2lzdHMgb2YgKGluIGFsbCBsb3dlciBjYXNlKTxicj4NCiZuYnNwOyAmbmJzcDstIFRoZSBmaXJzdCBsZXR0ZXIgb2YgeW91ciBmaXJzdCBuYW1lPGJyPg0KJm5ic3A7ICZuYnNwOy0gVGhlIGZpcnN0IHRocmVlIGxldHRlcnMgb2YgeW91ciBsYXN0IG5hbWUgKG9yIGZpcnN0IHR3byBpZiB5b3UgaGF2ZSBhIDItbGV0dGVyIGxhc3QgbmFtZSk8YnI+DQombmJzcDsgJm5ic3A7LSBUaGUgbGFzdCBmb3VyIG51bWJlcnMgb2YgeW91ciBzb2NpYWwgc2VjdXJpdHkgbnVtYmVyLjxicj48YnI+DQpVcG9uIGZpcnN0IGxvZ2luOjxicj4NCiZuYnNwOyAmbmJzcDstIFlvdXIgaW5pdGlhbCBwYXNzd29yZCBpcyB0aGUgc2FtZSBhcyB5b3VyIHVzZXIgSUQuPGJyPg0KJm5ic3A7ICZuYnNwOy0gWW91IHdpbGwgYmUgcHJvbXB0ZWQgdG8gY2hhbmdlIHlvdXIgcGFzc3dvcmQgYW5kIHRvIGNob29zZSAoYW5kIGFuc3dlcikgYSBzZWN1cml0eSBxdWVzdGlvbi48YnI+DQombmJzcDsgJm5ic3A7LSBPbmNlIHlvdXIgcGFzc3dvcmQgaGFzIGJlZW4gY2hhbmdlZCwgeW91IHdpbGwgYmUgYXNrZWQgdG8gbG9nIGJhY2sgaW4gdXNpbmcgeW91ciBuZXcgcGFzc3dvcmQuPGJyPjxicj4NCklmIHlvdSBmb3JnZXQgeW91ciBwYXNzd29yZDo8YnI+DQombmJzcDsgJm5ic3A7LSBFbnRlciB5b3VyIHVzZXIgSUQsIGFuZCBwcmVzcyB0aGUgJ2ZvcmdvdCBwYXNzd29yZCcgYnV0dG9uLjxicj4NCiZuYnNwOyAmbmJzcDstIFlvdSB3aWxsIGJlIGFza2VkIHRvIGFuc3dlciB0aGUgc2VjdXJpdHkgcXVlc3Rpb24geW91IGNob3NlIGF0IGZpcnN0IHNpZ24gb24uPGJyPg0KJm5ic3A7ICZuYnNwOy0gV2hlbiB5b3VyIHNlY3VyaXR5IHF1ZXN0aW9uIGhhcyBiZWVuIGNvcnJlY3RseSBhbnN3ZXJlZCwgeW91ciBwYXNzd29yZCB3aWxsIGJlIHJlc2V0IHRvIG1hdGNoIHlvdXIgdXNlciBJRC48YnI+DQombmJzcDsgJm5ic3A7LSBMb2cgSW4gdXNpbmcgeW91ciBVc2VyIElEIGFzIHlvdXIgcGFzc3dvcmQgYW5kIHlvdSBtYXkgY3JlYXRlIGEgbmV3IHBhc3N3b3JkIGFuZCBzZWN1cml0eSBxdWVzdGlvbiBhbmQgYW5zd2VyLjxicj48YnI+DQoNCklmIHlvdSBuZWVkIGFzc2lzdGFuY2Ugd2l0aCBsb2dnaW5nIGludG8gdGhlIHN5c3RlbSwgcGxlYXNlIGNvbnRhY3QgdXMgYXQ6ICg1ODUpIDc3NyDigJMgNjQ5NC4NCjwvRk9OVD5kZKf9HPDzLobuac6BHUEBInstenU4'),
			('txtUserID', USERNAME),
			('txtPassword', PASSWORD),
			('btnLogin', 'Login'),
		))
	)
	auth.add_header('User-Agent', 'mypaystub.info scraper v1.1.2')
	data = mechanize.urlopen(auth)
except Exception, e:
	print >>sys.stderr, \
		'Unable to log into https://%s.mypaystub.info/: %s' % \
		(COMPANY, str(e))
	sys.exit(1)

try:
	auth = Request('https://%s.mypaystub.info/ddiarchive/welcome.aspx?acttype=test' % COMPANY)
	auth.add_header('User-Agent', 'mypaystub.info scraper v1.1.2')
	data = mechanize.urlopen(auth)

	soup = BeautifulSoup(''.join(data.fp.readlines()))
	next = soup.find(text=re.compile(r'^\s*Direct Deposit\s*$')).\
		findParent('tr').find(name='a')['href']
except Exception, e:
	print >>sys.stderr, 'Unable to retrieve document categories: %s' % str(e)
	sys.exit(1)

if next[0] != '/':
	next = '/ddiarchive/%s' % next

try:
	auth = Request('https://%s.mypaystub.info/%s' % (COMPANY, next))
	auth.add_header('User-Agent', 'mypaystub.info scraper v1.1.2')
	data = mechanize.urlopen(auth)
except Exception, e:
	print >>sys.stderr, 'Unable to retrieve document list: %s' % str(e)
	sys.exit(1)

soup = BeautifulSoup(''.join(data.fp.readlines()))
if LIST_ALL:
	try:
		dates = soup.find(text='Voucher Date').findParent(name='table').\
			findAll(text=re.compile(r'^\s*\d{1,2}/\d{1,2}/\d{4}\s*$'))
		print '\n'.join(dates)
		sys.exit(0)
	except Exception:
		print >>sys.stderr, 'Unable to retrieve list of available pay stubs.'
		sys.exit(1)
elif when:
	try:
		next = soup.find(text='Voucher Date').findParent(name='table').\
			find(text=when[0]).findParent('tr').find(name='a')['href']
	except Exception:
		print >>sys.stderr, 'The pay stub for %s is not available.' % when[0]
		sys.exit(1)
else:
	try:
		next = soup.find(text='Voucher Date').findParent(name='tr').nextSibling.\
			find(name='a')['href']
	except Exception:
		print >>sys.stderr, 'Unable to retrieve most recent pay stub.'
		sys.exit(1)

if next[0] != '/':
	next = '/ddiarchive/%s' % next

try:
	auth = Request('https://%s.mypaystub.info/%s' % (COMPANY, next))
	auth.add_header('User-Agent', 'mypaystub.info scraper v1.1.2')
	data = mechanize.urlopen(auth)
except Exception, e:
	print >>sys.stderr, 'Unable to retrieve intermediate page: %s' % str(e)
	sys.exit(1)

for tup in cgi.parse_qsl(next.split('?', 1)[1]):
	if tup[0] == 'documentid':
		try:
			auth = Request('https://%s.mypaystub.info/AssetViewer/DocumentView/viewdocmain.aspx?page=%s' % (COMPANY, quote_plus(tup[1])))
			auth.add_header('User-Agent', 'mypaystub.info scraper v1.1.2')
			data = mechanize.urlopen(auth)
		except Exception, e:
			print >>sys.stderr, 'Unable to retrieve pay stub: %s' % str(e)
			sys.exit(1)

		print ''.join(data.fp.readlines())
		break
else:
	print >>sys.stderr, 'Unable to determine document ID.'
	sys.exit(1)
